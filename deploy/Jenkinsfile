pipeline {
    agent any
    parameters {
        string(name: 'DEPLOY_COMMIT', description: 'commit to deploy to website')
        //choice(name: 'TARGET', choices: ['One', 'Two', 'Three'], description: 'Choose Deployment Target')
    }
    stages {
        stage("Transfer Files"){
            parallel{
                stage('Static website files') {
                    steps {
                        withAWS(credentials:"aws", region:"eu-central-1"){
                            script{
                                String path = "karaokemp-website/COMMIT-${DEPLOY_COMMIT}/frontend"
                                int pathLength = path.length() + 1
                                files = s3FindFiles(bucket:'karaokemp-artifacts', glob:"${path}/**", onlyFiles: true)
                                files.each {
                                    itemObject -> echo "item path: ${itemObject}"
                                    String itemPath = itemObject.toString()
                                    String item = itemPath.drop(pathLength)
                                    s3Copy(pathStyleAccessEnabled: true, fromBucket:"karaokemp-artifacts", fromPath:"${itemPath}", toBucket:'karaokemp-website', toPath:"${item}")
                                }
                            }
                        }
                    }
                }

        stage("Lambda Zip files"){
            steps{
                    withCredentials([usernamePassword(credentialsId: 'aws', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh "docker run --rm -e AWS_ACCESS_KEY_ID=${USERNAME} -e AWS_SECRET_ACCESS_KEY=${PASSWORD} amazon/aws-cliupdate-function-code --function-name youtube-video-upload --s3-bucket karaokemp-artifacts --s3-key karaokemp-website/COMMIT-022b0ba5d9f3ba463ab8eb3df078647f0ec0fdcf/cloud-functions/youtube-video-upload.zip"
                    }
                }
            }
        }

    }
        }
}