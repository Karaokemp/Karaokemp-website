AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description:
  Karaokemp Cloud Services 

Globals:
  Function:
    Runtime: nodejs12.x
    Environment:
      Variables: 
        S3_BUCKET : !Ref KaraokeSongsBucket

Parameters:
 DNS: 
    Type: String
    Description: DNS to use for production Website
    

Conditions: 
  UseDNS: !Equals [ !Ref AWS::StackName,kcs]

Resources:
  SongsApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration: True
  ListSongsFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      Handler: ./dist/app.listSongs
      Events:
        ListSongs:
          Type: HttpApi
          Properties:
            ApiId: !Ref SongsApi
            Method: GET
            Path: /songs
      Policies:
        - AmazonS3ReadOnlyAccess
  UploadFromYoutubeFunction:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 128
      Handler: ./dist/app.uploadFromYoutube
      Events:
        UploadRequest:
          Type: HttpApi
          Properties:
            ApiId: !Ref SongsApi
            Method: PUT
            Path: /songs/{source}/{videoId}
      Policies:
        - AmazonS3FullAccess
  KaraokeSongsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-karaoke-songs"
      AccessControl: PublicRead
  FrontendBucket:
    Type:  AWS::S3::Bucket
    Properties:
      BucketName: !If [UseDNS, !Ref DNS,!Sub "${AWS::StackName}-website-frontend"]
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: 'index.html'

Outputs:
  Website:
    Description: Public Website URL
    Value: !GetAtt [FrontendBucket, WebsiteURL]
  SongsBucket:
    Description: Bucket Phisical Name
    Value: !Sub "${AWS::StackName}-karaoke-songs"
  SongsBucketURL:
    Value: !Sub "https://s3.console.aws.amazon.com/s3/buckets/${AWS::StackName}-karaoke-songs"
    Description: Name of S3 bucket to hold website content
  ListFunction:
    Description: List Songs Function URL
    Value: !Sub "https://${SongsApi}.execute-api.${AWS::Region}.amazonaws.com/songs"
  KaraokempAPI:
    Description: Karaokemp API URL
    Value: !Sub "https://${SongsApi}.execute-api.${AWS::Region}.amazonaws.com"


